[{"C:\\Users\\Dell\\Desktop\\M7-D10\\M7-D10\\weather-app\\src\\index.js":"1","C:\\Users\\Dell\\Desktop\\M7-D10\\M7-D10\\weather-app\\src\\reportWebVitals.js":"2","C:\\Users\\Dell\\Desktop\\M7-D10\\M7-D10\\weather-app\\src\\App.js":"3","C:\\Users\\Dell\\Desktop\\M7-D10\\M7-D10\\weather-app\\src\\store\\index.js":"4","C:\\Users\\Dell\\Desktop\\M7-D10\\M7-D10\\weather-app\\src\\reducers\\weatherReducer.js":"5","C:\\Users\\Dell\\Desktop\\M7-D10\\M7-D10\\weather-app\\src\\reducers\\loadingReducer.js":"6","C:\\Users\\Dell\\Desktop\\M7-D10\\M7-D10\\weather-app\\src\\components\\searchEngine.jsx":"7","C:\\Users\\Dell\\Desktop\\M7-D10\\M7-D10\\weather-app\\src\\components\\weather.jsx":"8"},{"size":675,"mtime":1613147467338,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":1950,"mtime":1613139206401,"results":"12","hashOfConfig":"10"},{"size":763,"mtime":1613136590281,"results":"13","hashOfConfig":"10"},{"size":291,"mtime":1613124147105,"results":"14","hashOfConfig":"10"},{"size":963,"mtime":1613136800419,"results":"15","hashOfConfig":"10"},{"size":2914,"mtime":1613139017270,"results":"16","hashOfConfig":"10"},{"size":3433,"mtime":1613146597456,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cvsxx0",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},"C:\\Users\\Dell\\Desktop\\M7-D10\\M7-D10\\weather-app\\src\\index.js",[],"C:\\Users\\Dell\\Desktop\\M7-D10\\M7-D10\\weather-app\\src\\reportWebVitals.js",[],["40","41"],"C:\\Users\\Dell\\Desktop\\M7-D10\\M7-D10\\weather-app\\src\\App.js",["42","43","44","45","46"],"import logo from \"./logo.svg\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport { connect } from \"react-redux\";\nimport SearchEngine from \"./components/searchEngine\";\nimport Weather from \"./components/weather\";\nimport { Row, Col, Button, Container } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nconst mapStateToProps = (state) => state;\nconst mapDispatchToProps = (dispatch) => ({\n  changeWeather: (city) =>\n    dispatch(async (dispatch, getState) => {\n      try {\n        let response = await fetch(\n          \"https://api.openweathermap.org/data/2.5/weather?q=London&appid=1a944dea54d850b601ad666177b6deb2\",\n          {\n            method: \"GET\",\n          }\n        );\n\n        let data = await response.json();\n        console.log(data);\n        let weather = data;\n        console.log(weather);\n        dispatch({\n          type: \"CHANGE_CURRENT_WEATHER_LOCATION\",\n          payload: weather,\n        });\n      } catch (e) {\n        console.log(\"Fetching is not ok\", e);\n      }\n    }),\n});\n\n/* api.openweathermap.org/data/2.5/weather?q={city name}&appid={API key}\n          Edit <code>src/App.js</code> and save to reload.  */\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <SearchEngine />\n        {this.props.load.loading && (\n          <Row className=\"d-flex justify-content-center\">\n            <img\n              className=\"loadingImage\"\n              src=\"https://www.bluvale.com/skin/frontend/bluvale/default/images/more/loader/loading-white2.gif\"\n            />\n          </Row>\n        )}\n\n        {this.props.load.loaded && <Weather />}\n        \n        {this.props.load.loadedInvalidCity && !this.props.load.loading && (\n          <Row className=\"d-flex justify-content-center\">\n            <p className=\"errorMessage\">Please enter e real city</p>\n          </Row>\n        )}\n      </>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","C:\\Users\\Dell\\Desktop\\M7-D10\\M7-D10\\weather-app\\src\\store\\index.js",[],"C:\\Users\\Dell\\Desktop\\M7-D10\\M7-D10\\weather-app\\src\\reducers\\weatherReducer.js",["47"],"export default function (state = {}, action) {\r\n    switch (action.type) {\r\n      case \"CHANGE_CURRENT_WEATHER_LOCATION\":\r\n        console.log(state);\r\n        return {\r\n          ...state,\r\n          weather: action.payload\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","C:\\Users\\Dell\\Desktop\\M7-D10\\M7-D10\\weather-app\\src\\reducers\\loadingReducer.js",["48"],"export default function (state = {}, action) {\r\n    switch (action.type) {\r\n      case \"START_LOADING\":\r\n        return {\r\n          ...state,\r\n          loading: true,\r\n        };\r\n      case \"STOP_LOADING\":\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n        };\r\n        case \"LOADED\":\r\n            return {\r\n              ...state,\r\n              loaded: true,\r\n            };\r\n            case \"NOT_LOADED\":\r\n                return {\r\n                  ...state,\r\n                  loaded: false,\r\n                };\r\n                case \"INVALID_CITY\":\r\n                    return {\r\n                      ...state,\r\n                      loadedInvalidCity: true,\r\n                    };\r\n                    case \"VALID_CITY\":\r\n                        return {\r\n                          ...state,\r\n                          loadedInvalidCity: false,\r\n                        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","C:\\Users\\Dell\\Desktop\\M7-D10\\M7-D10\\weather-app\\src\\components\\searchEngine.jsx",["49","50","51"],"import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Container } from \"react-bootstrap\";\r\nimport \"./searchEngine.css\";\r\nimport { connect } from \"react-redux\";\r\nconst mapStateToProps = (state) => state;\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  changeWeather: (city) =>\r\n    dispatch(async (dispatch, getState) => {\r\n      try {\r\n        let response = await fetch(\r\n          `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=1a944dea54d850b601ad666177b6deb2`,\r\n          {\r\n            method: \"GET\",\r\n          }\r\n        );\r\n\r\n        let data = await response.json();\r\n        console.log(data);\r\n        let weather = data;\r\n        console.log(weather);\r\n        dispatch({\r\n          type: \"CHANGE_CURRENT_WEATHER_LOCATION\",\r\n          payload: weather,\r\n        });\r\n      } catch (e) {\r\n        console.log(\"Fetching is not ok\", e);\r\n      }\r\n    }),\r\n  loaded: () => {\r\n    dispatch({\r\n      type: \"LOADED\",\r\n    });\r\n  },\r\n  notLoaded: () => {\r\n    dispatch({\r\n      type: \"NOT_LOADED\",\r\n    });\r\n  },\r\n  invalidCity: () => {\r\n    dispatch({\r\n      type: \"INVALID_CITY\",\r\n    });\r\n  },\r\n  validCity: () => {\r\n    dispatch({\r\n      type: \"VALID_CITY\",\r\n    });\r\n  },\r\n  startLoading: () => {\r\n    dispatch({\r\n      type: \"START_LOADING\",\r\n    });\r\n  },\r\n  stopLoading: () => {\r\n    dispatch({\r\n      type: \"STOP_LOADING\",\r\n    });\r\n  },\r\n});\r\n\r\nclass SearchEngine extends Component {\r\n  dynamicTyping = (e) => {\r\n    this.setState({ textForSearch: e.currentTarget.value });\r\n  };\r\n  state = {\r\n    textForSearch: \"\",\r\n  };\r\n  changeWeatherLoading = async () => {\r\n    this.props.startLoading();\r\n    await this.props.changeWeather(this.state.textForSearch);\r\n    this.props.notLoaded();\r\n    if (!this.props.currentWeather.weather.message) {\r\n      const that = this;\r\n      setTimeout(function(){\r\n        that.props.stopLoading();\r\n        that.props.loaded();\r\n        that.props.validCity();\r\n      }, 1500); \r\n     \r\n    } else {\r\n      this.props.invalidCity();\r\n      this.props.stopLoading();\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Container className=\"mainSearchRow\">\r\n          <Row className=\"d-flex justify-content-center\">\r\n            <img\r\n              className=\"searchImage\"\r\n              src=\"http://cdn.lowgif.com/full/24649d3b53e7a0ff-.gif\"\r\n            />\r\n          </Row>\r\n          <Row className=\"inputRow d-flex justify-content-center mb-4\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"inputForm\"\r\n              placeholder=\"   Location\"\r\n              onChange={(e) => this.dynamicTyping(e)}\r\n            ></input>\r\n            <button className = \"btn\"onClick={() => this.changeWeatherLoading()}><h className = \"search\">Search</h></button>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchEngine);\r\n","C:\\Users\\Dell\\Desktop\\M7-D10\\M7-D10\\weather-app\\src\\components\\weather.jsx",["52","53"],"import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Container } from \"react-bootstrap\";\r\nimport \"./searchEngine.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { WiStrongWind } from \"react-icons/wi\";\r\nimport { FaCloudSun } from \"react-icons/fa\";\r\nimport { CgCompressV } from \"react-icons/cg\";\r\nconst mapStateToProps = (state) => state;\r\nclass Weather extends Component {\r\n  state = {\r\n    //I am very sorry for this...If you see it please text and explain me how to filter the list by uniq date\r\n    fiveDays: [\r\n      this.props.currentWeather.weather.list[0],\r\n      this.props.currentWeather.weather.list[7],\r\n      this.props.currentWeather.weather.list[14],\r\n      this.props.currentWeather.weather.list[21],\r\n      this.props.currentWeather.weather.list[28],\r\n    ],\r\n  };\r\n  getDayOfWeek(date) {\r\n    var d = new Date(date).getDay();\r\n    console.log(d);\r\n    if (d === 1) {\r\n      return \"Monday\";\r\n    } else if (d === 2) {\r\n      return \"Tuesday\";\r\n    } else if (d === 3) {\r\n      return \"Wednesday\";\r\n    } else if (d === 4) {\r\n      return \"Thursday\";\r\n    } else if (d === 5) {\r\n      return \"Friday\";\r\n    } else if (d === 6) {\r\n      return \"Saturday\";\r\n    } else if (d === 0) {\r\n      return \"Sunday\";\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <Row>\r\n          <Col sm={1} />\r\n          {this.state.fiveDays.map((day) => (\r\n            <Col sm={2} s={10}>\r\n              {\" \"}\r\n              <Container className=\"weatherForDay\">\r\n                <Row>\r\n                  <Col sm={6} xs={2}>\r\n                    <img\r\n                      className=\"currentWeatherIcon\"\r\n                      src={`http://openweathermap.org/img/w/${day.weather[0].icon}.png`}\r\n                    />\r\n                  </Col>\r\n                  <Col sm={6} xs={6} className=\"dateCol\">\r\n                    <Row>{this.getDayOfWeek(day.dt_txt.slice(0, 10))}</Row>\r\n                    <Row className = \"date\">{day.dt_txt.slice(0, 10)}</Row>\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"temperatureRow\">\r\n                  <Col sm={6} className=\"temperature\">\r\n                    Max{\" \"}\r\n                    <h className=\"temp\">\r\n                      {(day.main.temp_max - 273).toFixed(0)}°C\r\n                    </h>\r\n                  </Col>\r\n                  <Col sm={6} className=\"temperature\">\r\n                    Min{\" \"}\r\n                    <h className=\"temp\">\r\n                      {(day.main.temp_min - 273).toFixed(0)}°C\r\n                    </h>\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"detailsRow first\">\r\n                  {\" \"}\r\n                  <FaCloudSun className=\"rain\" />{\" \"}\r\n                  <h className=\"value\">{day.clouds.all}%</h>\r\n                </Row>\r\n                <Row className=\"detailsRow\">\r\n                  {\" \"}\r\n                  <WiStrongWind className=\"wind\" />\r\n                  <h className=\"value\">{day.wind.speed}m/s</h>\r\n                </Row>\r\n                <Row className=\"detailsRow\">\r\n                  {\" \"}\r\n                  <CgCompressV className=\"pressure\" />\r\n                  <h className=\"value\">{day.main.pressure}hPa</h>\r\n                </Row>\r\n              </Container>\r\n            </Col>\r\n          ))}\r\n          <Col sm={1} />\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Weather);\r\n",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":1,"column":8,"nodeType":"60","messageId":"61","endLine":1,"endColumn":12},{"ruleId":"58","severity":1,"message":"62","line":7,"column":15,"nodeType":"60","messageId":"61","endLine":7,"endColumn":18},{"ruleId":"58","severity":1,"message":"63","line":7,"column":20,"nodeType":"60","messageId":"61","endLine":7,"endColumn":26},{"ruleId":"58","severity":1,"message":"64","line":7,"column":28,"nodeType":"60","messageId":"61","endLine":7,"endColumn":37},{"ruleId":"65","severity":1,"message":"66","line":44,"column":13,"nodeType":"67","endLine":47,"endColumn":15},{"ruleId":"68","severity":1,"message":"69","line":1,"column":1,"nodeType":"70","endLine":12,"endColumn":4},{"ruleId":"68","severity":1,"message":"69","line":1,"column":1,"nodeType":"70","endLine":36,"endColumn":4},{"ruleId":"58","severity":1,"message":"62","line":2,"column":15,"nodeType":"60","messageId":"61","endLine":2,"endColumn":18},{"ruleId":"58","severity":1,"message":"63","line":2,"column":20,"nodeType":"60","messageId":"61","endLine":2,"endColumn":26},{"ruleId":"65","severity":1,"message":"66","line":90,"column":13,"nodeType":"67","endLine":93,"endColumn":15},{"ruleId":"58","severity":1,"message":"63","line":2,"column":20,"nodeType":"60","messageId":"61","endLine":2,"endColumn":26},{"ruleId":"65","severity":1,"message":"66","line":50,"column":21,"nodeType":"67","endLine":53,"endColumn":23},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","'Button' is defined but never used.","'Container' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]