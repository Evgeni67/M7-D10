{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\M7-D10\\\\M7-D10\\\\weather-app\\\\src\\\\App.js\";\nimport logo from \"./logo.svg\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport { connect } from \"react-redux\";\nimport SearchEngine from \"./components/searchEngine\";\nimport Weather from \"./components/weather\";\nimport { Row, Col, Button, Container } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => state;\n\nconst mapDispatchToProps = dispatch => ({\n  changeWeather: city => dispatch(async (dispatch, getState) => {\n    try {\n      let response = await fetch(\"https://api.openweathermap.org/data/2.5/weather?q=London&appid=1a944dea54d850b601ad666177b6deb2\", {\n        method: \"GET\"\n      });\n      let data = await response.json();\n      console.log(data);\n      let weather = data;\n      console.log(weather);\n      dispatch({\n        type: \"CHANGE_CURRENT_WEATHER_LOCATION\",\n        payload: weather\n      });\n    } catch (e) {\n      console.log(\"Fetching is not ok\", e);\n    }\n  })\n});\n/* api.openweathermap.org/data/2.5/weather?q={city name}&appid={API key}\n          Edit <code>src/App.js</code> and save to reload.  */\n\n\nclass App extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SearchEngine, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), this.props.load.loaded && /*#__PURE__*/_jsxDEV(Weather, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 36\n      }, this), this.props.load.loadedInvalidCity && /*#__PURE__*/_jsxDEV(Row, {\n        className: \"d-flex justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"CITY DOES NOT EXIST \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 95\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 47\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/Dell/Desktop/M7-D10/M7-D10/weather-app/src/App.js"],"names":["React","Component","connect","SearchEngine","Weather","Row","Col","Button","Container","mapStateToProps","state","mapDispatchToProps","dispatch","changeWeather","city","getState","response","fetch","method","data","json","console","log","weather","type","payload","e","App","render","props","load","loaded","loadedInvalidCity"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,iBAA5C;AACA,OAAO,kCAAP;;;;AACA,MAAMC,eAAe,GAAIC,KAAD,IAAWA,KAAnC;;AACA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCC,EAAAA,aAAa,EAAGC,IAAD,IACbF,QAAQ,CAAC,OAAOA,QAAP,EAAiBG,QAAjB,KAA8B;AACrC,QAAI;AACF,UAAIC,QAAQ,GAAG,MAAMC,KAAK,CACxB,iGADwB,EAExB;AACEC,QAAAA,MAAM,EAAE;AADV,OAFwB,CAA1B;AAOA,UAAIC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,UAAII,OAAO,GAAGJ,IAAd;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AACAX,MAAAA,QAAQ,CAAC;AACPY,QAAAA,IAAI,EAAE,iCADC;AAEPC,QAAAA,OAAO,EAAEF;AAFF,OAAD,CAAR;AAID,KAhBD,CAgBE,OAAOG,CAAP,EAAU;AACVL,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCI,CAAlC;AACD;AACF,GApBO;AAF8B,CAAf,CAA3B;AAyBA;AACA;;;AACA,MAAMC,GAAN,SAAkB1B,SAAlB,CAA4B;AAC1B2B,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cADF,EAEG,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,MAAhB,iBAA0B,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAF7B,EAGG,KAAKF,KAAL,CAAWC,IAAX,CAAgBE,iBAAhB,iBAAqC,QAAC,GAAD;AAAK,QAAA,SAAS,EAAE,+BAAhB;AAAA,+BAAgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAhD;AAAA;AAAA;AAAA;AAAA,cAHxC;AAAA,oBADF;AAOD;;AATyB;;AAY5B,eAAe9B,OAAO,CAACO,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CgB,GAA7C,CAAf","sourcesContent":["import logo from \"./logo.svg\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport { connect } from \"react-redux\";\nimport SearchEngine from \"./components/searchEngine\";\nimport Weather from \"./components/weather\";\nimport { Row, Col, Button, Container } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nconst mapStateToProps = (state) => state;\nconst mapDispatchToProps = (dispatch) => ({\n  changeWeather: (city) =>\n    dispatch(async (dispatch, getState) => {\n      try {\n        let response = await fetch(\n          \"https://api.openweathermap.org/data/2.5/weather?q=London&appid=1a944dea54d850b601ad666177b6deb2\",\n          {\n            method: \"GET\",\n          }\n        );\n\n        let data = await response.json();\n        console.log(data);\n        let weather = data;\n        console.log(weather);\n        dispatch({\n          type: \"CHANGE_CURRENT_WEATHER_LOCATION\",\n          payload: weather,\n        });\n      } catch (e) {\n        console.log(\"Fetching is not ok\", e);\n      }\n    }),\n});\n\n/* api.openweathermap.org/data/2.5/weather?q={city name}&appid={API key}\n          Edit <code>src/App.js</code> and save to reload.  */\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <SearchEngine />\n        {this.props.load.loaded && <Weather />}\n        {this.props.load.loadedInvalidCity && <Row className =\"d-flex justify-content-center\"><p>CITY DOES NOT EXIST </p></Row>}\n      </>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}