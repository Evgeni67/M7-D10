{"ast":null,"code":"import logo from \"./logo.svg\";\nimport React, { Component } from \"react\";\nimport './App.css';\n\nconst mapStateToProps = state => state;\n\nconst mapDispatchToProps = dispatch => ({\n  changeWeather: city => dispatch(async (dispatch, getState) => {\n    let response = await fetch(\"https://deezerdevs-deezer.p.rapidapi.com/search?q=\" + artistName, {\n      method: \"GET\",\n      headers: {\n        \"x-rapidapi-key\": \"ec5577de62msh9d203d454724b43p1f3c08jsnad1a59a31f6f\",\n        \"x-rapidapi-host\": \"deezerdevs-deezer.p.rapidapi.com\"\n      }\n    });\n    let data = await response.json();\n    let songs = data.data;\n\n    if (artistName === \"eminem\") {\n      dispatch({\n        type: \"ADD_SONGS_TO_EMINEM\",\n        payload: songs\n      });\n    } else if (artistName === \"muse\") {\n      dispatch({\n        type: \"ADD_SONGS_TO_MUSE\",\n        payload: songs\n      });\n    } else if (artistName === \"ariana\") {\n      dispatch({\n        type: \"ADD_SONGS_TO_ARIANA\",\n        payload: songs\n      });\n    }\n  })\n});\n/* api.openweathermap.org/data/2.5/weather?q={city name}&appid={API key}\n          Edit <code>src/App.js</code> and save to reload.  */\n\n\nclass App extends Component {\n  render() {\n    return 1;\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/Dell/Desktop/M7-D10/M7-D10/weather-app/src/App.js"],"names":["React","Component","mapStateToProps","state","mapDispatchToProps","dispatch","changeWeather","city","getState","response","fetch","artistName","method","headers","data","json","songs","type","payload","App","render","connect"],"mappings":";AACA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAO,WAAP;;AACA,MAAMC,eAAe,GAAIC,KAAD,IAAWA,KAAnC;;AACA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCC,EAAAA,aAAa,EAAGC,IAAD,IACfF,QAAQ,CAAC,OAAOA,QAAP,EAAiBG,QAAjB,KAA8B;AACrC,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CACxB,uDAAuDC,UAD/B,EAExB;AACEC,MAAAA,MAAM,EAAE,KADV;AAEEC,MAAAA,OAAO,EAAE;AACP,0BACE,oDAFK;AAGP,2BAAmB;AAHZ;AAFX,KAFwB,CAA1B;AAWA,QAAIC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAjB;AAEA,QAAIC,KAAK,GAAGF,IAAI,CAACA,IAAjB;;AACA,QAAIH,UAAU,KAAK,QAAnB,EAA6B;AAC3BN,MAAAA,QAAQ,CAAC;AACPY,QAAAA,IAAI,EAAE,qBADC;AAEPC,QAAAA,OAAO,EAAEF;AAFF,OAAD,CAAR;AAID,KALD,MAKO,IAAIL,UAAU,KAAK,MAAnB,EAA2B;AAChCN,MAAAA,QAAQ,CAAC;AACPY,QAAAA,IAAI,EAAE,mBADC;AAEPC,QAAAA,OAAO,EAAEF;AAFF,OAAD,CAAR;AAID,KALM,MAKA,IAAIL,UAAU,KAAK,QAAnB,EAA6B;AAClCN,MAAAA,QAAQ,CAAC;AACPY,QAAAA,IAAI,EAAE,qBADC;AAEPC,QAAAA,OAAO,EAAEF;AAFF,OAAD,CAAR;AAID;AACF,GA/BO;AAFgC,CAAf,CAA3B;AAoCA;AACA;;;AACA,MAAMG,GAAN,SAAkBlB,SAAlB,CAA2B;AACzBmB,EAAAA,MAAM,GAAE;AACR,WAEF,CAFE;AAIO;;AANkB;;AAS3B,eAAeC,OAAO,CAACnB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Ce,GAA7C,CAAf","sourcesContent":["import logo from './logo.svg';\nimport React,{Component} from \"react\"\nimport './App.css';\nconst mapStateToProps = (state) => state\nconst mapDispatchToProps = (dispatch) => ({\n  changeWeather: (city) =>\n  dispatch(async (dispatch, getState) => {\n    let response = await fetch(\n      \"https://deezerdevs-deezer.p.rapidapi.com/search?q=\" + artistName,\n      {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\":\n            \"ec5577de62msh9d203d454724b43p1f3c08jsnad1a59a31f6f\",\n          \"x-rapidapi-host\": \"deezerdevs-deezer.p.rapidapi.com\",\n        },\n      }\n    );\n    let data = await response.json();\n   \n    let songs = data.data;\n    if (artistName === \"eminem\") {\n      dispatch({\n        type: \"ADD_SONGS_TO_EMINEM\",\n        payload: songs,\n      });\n    } else if (artistName === \"muse\") {\n      dispatch({\n        type: \"ADD_SONGS_TO_MUSE\",\n        payload: songs,\n      });\n    } else if (artistName === \"ariana\") {\n      dispatch({\n        type: \"ADD_SONGS_TO_ARIANA\",\n        payload: songs,\n      });\n    }\n  })})\n  \n\n/* api.openweathermap.org/data/2.5/weather?q={city name}&appid={API key}\n          Edit <code>src/App.js</code> and save to reload.  */\nclass App extends Component{\n  render(){\n  return (\n      \n1\n  );\n        }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}