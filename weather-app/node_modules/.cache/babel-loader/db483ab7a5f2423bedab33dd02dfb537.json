{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\M7-D10\\\\M7-D10\\\\weather-app\\\\src\\\\components\\\\weather.jsx\";\nimport React, { Component } from \"react\";\nimport { Row, Col, Button, Container } from \"react-bootstrap\";\nimport \"./searchEngine.css\";\nimport { connect } from \"react-redux\";\nimport { WiStrongWind } from \"react-icons/wi\";\nimport { FaCloudSun } from \"react-icons/fa\";\nimport { CgCompressV } from \"react-icons/cg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => state;\n\nclass Weather extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      //I am very sorry for this...If you see it please text and explain me how to filter the list by uniq date\n      fiveDays: [this.props.currentWeather.weather.list[0], this.props.currentWeather.weather.list[7], this.props.currentWeather.weather.list[14], this.props.currentWeather.weather.list[21], this.props.currentWeather.weather.list[28]]\n    };\n  }\n\n  getDayOfWeek(date) {\n    console.log(date);\n    var d = new Date(date).getDay();\n\n    if (d === 1) {\n      return \"Monday\";\n    } else if (d === 2) {\n      return \"Tuesday\";\n    } else if (d === 3) {\n      return \"Wednesday\";\n    } else if (d === 4) {\n      return \"Thursday\";\n    } else if (d === 5) {\n      return \"Friday\";\n    } else if (d === 6) {\n      return \"Saturday\";\n    } else if (d === 7) {\n      return \"Sunday\";\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          sm: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), this.state.fiveDays.map(day => /*#__PURE__*/_jsxDEV(Col, {\n          sm: 2,\n          s: 10,\n          children: [\" \", /*#__PURE__*/_jsxDEV(Container, {\n            className: \"weatherForDay\",\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                sm: 4,\n                xs: 2,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"currentWeatherIcon\",\n                  src: `http://openweathermap.org/img/w/${day.weather[0].icon}.png`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                sm: 8,\n                xs: 6,\n                className: \"dateCol\",\n                children: this.getDayOfWeek(day.dt_txt.slice(0, 10))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              className: \"temperatureRow\",\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                sm: 6,\n                className: \"temperature\",\n                children: [\"Max\", \" \", /*#__PURE__*/_jsxDEV(\"h\", {\n                  className: \"temp\",\n                  children: [(day.main.temp_max - 273).toFixed(0), \"\\xB0C\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                sm: 6,\n                className: \"temperature\",\n                children: [\"Min\", \" \", /*#__PURE__*/_jsxDEV(\"h\", {\n                  className: \"temp\",\n                  children: [(day.main.temp_min - 273).toFixed(0), \"\\xB0C\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              className: \"detailsRow first\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(FaCloudSun, {\n                className: \"rain\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"h\", {\n                className: \"value\",\n                children: [day.clouds.all, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              className: \"detailsRow\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(WiStrongWind, {\n                className: \"wind\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h\", {\n                className: \"value\",\n                children: [day.wind.speed, \"m/s\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              className: \"detailsRow\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(CgCompressV, {\n                className: \"pressure\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h\", {\n                className: \"value\",\n                children: [day.main.pressure, \"hPa\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default connect(mapStateToProps)(Weather);","map":{"version":3,"sources":["C:/Users/Dell/Desktop/M7-D10/M7-D10/weather-app/src/components/weather.jsx"],"names":["React","Component","Row","Col","Button","Container","connect","WiStrongWind","FaCloudSun","CgCompressV","mapStateToProps","state","Weather","fiveDays","props","currentWeather","weather","list","getDayOfWeek","date","console","log","d","Date","getDay","render","map","day","icon","dt_txt","slice","main","temp_max","toFixed","temp_min","clouds","all","wind","speed","pressure"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Row, Col, Button, Container } from \"react-bootstrap\";\r\nimport \"./searchEngine.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { WiStrongWind } from \"react-icons/wi\";\r\nimport { FaCloudSun } from \"react-icons/fa\";\r\nimport { CgCompressV } from \"react-icons/cg\";\r\nconst mapStateToProps = (state) => state;\r\nclass Weather extends Component {\r\n  state = {\r\n    //I am very sorry for this...If you see it please text and explain me how to filter the list by uniq date\r\n    fiveDays: [\r\n      this.props.currentWeather.weather.list[0],\r\n      this.props.currentWeather.weather.list[7],\r\n      this.props.currentWeather.weather.list[14],\r\n      this.props.currentWeather.weather.list[21],\r\n      this.props.currentWeather.weather.list[28],\r\n    ],\r\n  };\r\n  getDayOfWeek(date) {\r\n      console.log(date)\r\n    var d = new Date(date).getDay();\r\n    if (d === 1) {\r\n      return \"Monday\";\r\n    } else if (d === 2) {\r\n      return \"Tuesday\";\r\n    } else if (d === 3) {\r\n      return \"Wednesday\";\r\n    } else if (d === 4) {\r\n      return \"Thursday\";\r\n    } else if (d === 5) {\r\n      return \"Friday\";\r\n    } else if (d === 6) {\r\n      return \"Saturday\";\r\n    } else if (d === 7) {\r\n      return \"Sunday\";\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <Row>\r\n          <Col sm={1} />\r\n          {this.state.fiveDays.map((day) => (\r\n            <Col sm={2} s={10}>\r\n              {\" \"}\r\n              <Container className=\"weatherForDay\">\r\n                <Row>\r\n                  <Col sm={4} xs={2}>\r\n                    <img\r\n                      className=\"currentWeatherIcon\"\r\n                      src={`http://openweathermap.org/img/w/${day.weather[0].icon}.png`}\r\n                    />\r\n                  </Col>\r\n                  <Col sm={8} xs={6} className=\"dateCol\">\r\n                    {this.getDayOfWeek(day.dt_txt.slice(0, 10))}\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"temperatureRow\">\r\n                  <Col sm={6} className=\"temperature\">\r\n                    Max{\" \"}\r\n                    <h className=\"temp\">\r\n                      {(day.main.temp_max - 273).toFixed(0)}°C\r\n                    </h>\r\n                  </Col>\r\n                  <Col sm={6} className=\"temperature\">\r\n                    Min{\" \"}\r\n                    <h className=\"temp\">\r\n                      {(day.main.temp_min - 273).toFixed(0)}°C\r\n                    </h>\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"detailsRow first\">\r\n                  {\" \"}\r\n                  <FaCloudSun className=\"rain\" />{\" \"}\r\n                  <h className=\"value\">{day.clouds.all}%</h>\r\n                </Row>\r\n                <Row className=\"detailsRow\">\r\n                  {\" \"}\r\n                  <WiStrongWind className=\"wind\" />\r\n                  <h className=\"value\">{day.wind.speed}m/s</h>\r\n                </Row>\r\n                <Row className=\"detailsRow\">\r\n                  {\" \"}\r\n                  <CgCompressV className=\"pressure\" />\r\n                  <h className=\"value\">{day.main.pressure}hPa</h>\r\n                </Row>\r\n              </Container>\r\n            </Col>\r\n          ))}\r\n          <Col sm={1} />\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Weather);\r\n"]},"metadata":{},"sourceType":"module"}